- name: Install ansible requirements
  pip:
    executable: pip3
    extra_args: -U
    name: "{{ item }}"
  loop: "{{ lookup('file', 'requirements.txt').splitlines() }}"
  tags: always


## Software installation
- include_tasks: "install-{{ ansible_distribution|lower }}.yml"
  tags: always


## Configuration
- tags: configure
  block:
  - include_tasks: etcd-config.yml
    when: etcd_env_file | d('') | length

  - name: Generate linstor.toml
    template:
      src: linstor.toml.j2
      dest: /etc/linstor/linstor.toml
    when: linstor_db_connection_url | d('') | length

  - name: Generate linstor-client.conf
    template:
      src: linstor-client.conf.j2
      dest: /etc/linstor/linstor-client.conf

  - name: Enable and start Linstor Controller
    systemd:
      name: linstor-controller.service
      daemon_reload: yes
      state: restarted
      enabled: yes

  - name: Enable and start Linstor Satellite
    systemd:
      name: linstor-satellite.service
      daemon_reload: yes
      state: restarted
      enabled: yes

  ## Improve on this wait!
  - name: sleep for 30 seconds and continue with play
    wait_for: timeout=30

  - name: Initialize the Linstor control node as pure Controller
    shell: linstor node create {{ ansible_nodename }} {{ ansible_all_ipv4_addresses | ipaddr(drbd_replication_network) | first }} --node-type {% if 'linstor_satellites' not in group_names %}Controller{% else %}Combined{% endif %}
    register: linstor_create_result
    failed_when: ( linstor_create_result.rc not in [ 0, 10 ] )

  - name: List cluster nodes
    shell: linstor node list -p
    register: ret

  - debug:
      msg: "{{ ret.stdout }}"
    when: ret.rc == 0


- include_tasks: storage-pool.yml
  loop: "{{ linstor_pools }}"
  tags: storage

- include_tasks: csi-plugin.yml
  tags: csi
